{"version":3,"sources":["components/Field/Field.jsx","App.jsx","index.js"],"names":["getRandomRgb","num","Math","round","random","colors","one","two","tree","four","five","six","seven","eight","initialState","id","color","completed","toggle","twoChoosedTiles","Field","useState","tiles","setTiles","isFirstTile","setIsFirstTile","areEqual","arr","className","map","tile","CN","onClick","push","length","setTimeout","splice","clickHandler","style","backgroundColor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecef8061.chunk.js","sourcesContent":["import './Field.scss';\nimport { useEffect, useState, useReducer } from 'react';\nimport CN from 'classnames';\n\nfunction getRandomRgb() {\n  var num = Math.round(0xffffff * Math.random());\n  var r = num >> 16;\n  var g = (num >> 8) & 255;\n  var b = num & 255;\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}\n\nconst colors = {\n  one: getRandomRgb(),\n  two: getRandomRgb(),\n  tree: getRandomRgb(),\n  four: getRandomRgb(),\n  five: getRandomRgb(),\n  six: getRandomRgb(),\n  seven: getRandomRgb(),\n  eight: getRandomRgb(),\n};\n\nconst initialState = [\n  { id: 1, color: colors.one, completed: false, toggle: false },\n  { id: 2, color: colors.two, completed: false, toggle: false },\n  { id: 3, color: colors.tree, completed: false, toggle: false },\n  { id: 4, color: colors.four, completed: false, toggle: false },\n  { id: 5, color: colors.five, completed: false, toggle: false },\n  { id: 6, color: colors.six, completed: false, toggle: false },\n  { id: 7, color: colors.seven, completed: false, toggle: false },\n  { id: 8, color: colors.eight, completed: false, toggle: false },\n  { id: 9, color: colors.one, completed: false, toggle: false },\n  { id: 10, color: colors.two, completed: false, toggle: false },\n  { id: 11, color: colors.tree, completed: false, toggle: false },\n  { id: 12, color: colors.four, completed: false, toggle: false },\n  { id: 13, color: colors.five, completed: false, toggle: false },\n  { id: 14, color: colors.six, completed: false, toggle: false },\n  { id: 15, color: colors.seven, completed: false, toggle: false },\n  { id: 16, color: colors.eight, completed: false, toggle: false },\n];\n\nlet twoChoosedTiles = [];\n\nexport const Field = () => {\n  const [tiles, setTiles] = useState(initialState);\n  const [isFirstTile, setIsFirstTile] = useState('');\n\n  const clickHandler = ({ id, color }) => {\n    setTiles(\n      tiles.map((tile) => {\n        if (tile.id === id) {\n          tile.toggle = !tile.toggle;\n        }\n\n        return tile;\n      }),\n    );\n\n    if (!isFirstTile) {\n      setIsFirstTile(color);\n      twoChoosedTiles.push({ id, color });\n    } else {\n      twoChoosedTiles.push({ id, color });\n    }\n\n    if (twoChoosedTiles.length === 2) {\n      let equal = areEqual(twoChoosedTiles);\n\n      if (equal) {\n        setTimeout(() => {\n          setTiles(\n            tiles.map((tile) => {\n              if (\n                tile.color === twoChoosedTiles[0].color &&\n                tile.color === twoChoosedTiles[1].color\n              ) {\n                tile.completed = !tile.completed;\n              }\n\n              return tile;\n            }),\n          );\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          setTiles(\n            tiles.map((tile) => {\n              if (\n                tile.id === twoChoosedTiles[0].id ||\n                tile.id === twoChoosedTiles[1].id\n              ) {\n                tile.toggle = false;\n              }\n\n              return tile;\n            }),\n          );\n        }, 900);\n      }\n\n      setTimeout(() => {\n        twoChoosedTiles.splice(0, 2);\n      }, 1001);\n    }\n  };\n\n  const areEqual = (arr) => {\n    if (arr[0].color === arr[1].color) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"field\">\n      {tiles.map((tile) => (\n        <div\n          className={CN(\"field__scene\", {\n            \"is-completed\": tile.completed,\n          })}\n          key={tile.id}\n        >\n          <div\n            className={CN(\"field__tile\", {\n              \"is-flipped\": tile.toggle,\n            })}\n            onClick={() => {\n              clickHandler(tile);\n            }}\n          >\n            <div className=\"field__face field__face--front\"></div>\n            <div\n              className=\"field__face field__face--back\"\n              style={{ backgroundColor: `${tile.color}` }}\n            ></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import './App.scss';\nimport { Field } from './components/Field/Field';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2 className=\"App__heading\">Choose the same tiles</h2>\n      <Field />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}