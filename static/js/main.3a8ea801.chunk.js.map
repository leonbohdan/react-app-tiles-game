{"version":3,"sources":["store/randomColors.js","store/StateContext.jsx","components/Field/Field.jsx","components/End/End.jsx","App.jsx","index.js"],"names":["getRandomRgb","num","Math","round","random","headingColor","colors","one","two","tree","four","five","six","seven","eight","reducer","state","action","type","tiles","map","tile","id","payload","toggle","color","completed","twoChoosenTiles","counter","initialState","DispatchContext","React","createContext","StateContext","StateProvider","children","useReducer","dispatch","Provider","value","Field","useContext","useEffect","arr","length","setTimeout","className","CN","onClick","clickHandler","style","backgroundColor","End","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAAA,SAASA,IACP,IAAIC,EAAMC,KAAKC,MAAM,SAAWD,KAAKE,UAIrC,MAAO,QAHCH,GAAO,IAGK,MAFXA,GAAO,EAAK,KAEU,MADjB,IAANA,GACkC,IAGrC,IAIMI,EAAeL,IAEfM,EAAS,CACpBC,IAAKP,IACLQ,IAAKR,IACLS,KAAMT,IACNU,KAAMV,IACNW,KAAMX,IACNY,IAAKZ,IACLa,MAAOb,IACPc,MAAOd,KCnBHe,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,SACH,OAAO,2BACFF,GADL,IAEEG,MAAOH,EAAMG,MAAMC,KAAI,SAAAC,GACrB,OAAIA,EAAKC,KAAOL,EAAOM,QACdF,EAGF,2BACFA,GADL,IAEEG,QAASH,EAAKG,cAKtB,IAAK,QACH,OAAO,2BACFR,GADL,IAEEG,MAAOH,EAAMG,MAAMC,KAAI,SAAAC,GACrB,OAAIA,EAAKI,QAAUR,EAAOM,QAAQ,GAAGE,OAChCJ,EAAKI,QAAUR,EAAOM,QAAQ,GAAGE,MAC7BJ,EAGF,2BACFA,GADL,IAEEK,WAAYL,EAAKK,iBAKzB,IAAK,UACH,OAAO,2BACFV,GADL,IAEEG,MAAOH,EAAMG,MAAMC,KAAI,SAAAC,GACrB,OAAIA,EAAKC,KAAOL,EAAOM,QAAQ,GAAGD,IAC7BD,EAAKC,KAAOL,EAAOM,QAAQ,GAAGD,GAC1BD,EAGF,2BACFA,GADL,IAEEG,QAASH,EAAKG,cAKtB,IAAK,WACH,OAAO,2BACFR,GADL,IAEEW,gBAAgB,GAAD,mBACVX,EAAMW,iBADI,CAEbV,EAAOM,YAIb,IAAK,eACH,OAAO,2BACFP,GADL,IAEEW,gBAAiB,KAGrB,IAAK,WACH,OAAO,2BACFX,GADL,IAEEY,QAASZ,EAAMY,QAAU,IAG7B,QACE,OAAOZ,IAIAa,EAAe,CAC1BV,MAAO,CACL,CAAEG,GAAI,EAAGG,MAAOnB,EAAOC,IAAKmB,WAAW,EAAOF,QAAQ,GACtD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOE,IAAKkB,WAAW,EAAOF,QAAQ,GACtD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOG,KAAMiB,WAAW,EAAOF,QAAQ,GACvD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOI,KAAMgB,WAAW,EAAOF,QAAQ,GACvD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOK,KAAMe,WAAW,EAAOF,QAAQ,GACvD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOM,IAAKc,WAAW,EAAOF,QAAQ,GACtD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOO,MAAOa,WAAW,EAAOF,QAAQ,GACxD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOQ,MAAOY,WAAW,EAAOF,QAAQ,GACxD,CAAEF,GAAI,EAAGG,MAAOnB,EAAOC,IAAKmB,WAAW,EAAOF,QAAQ,GACtD,CAAEF,GAAI,GAAIG,MAAOnB,EAAOE,IAAKkB,WAAW,EAAOF,QAAQ,GACvD,CAAEF,GAAI,GAAIG,MAAOnB,EAAOG,KAAMiB,WAAW,EAAOF,QAAQ,GACxD,CAAEF,GAAI,GAAIG,MAAOnB,EAAOI,KAAMgB,WAAW,EAAOF,QAAQ,GACxD,CAAEF,GAAI,GAAIG,MAAOnB,EAAOK,KAAMe,WAAW,EAAOF,QAAQ,GACxD,CAAEF,GAAI,GAAIG,MAAOnB,EAAOM,IAAKc,WAAW,EAAOF,QAAQ,GACvD,CAAEF,GAAI,GAAIG,MAAOnB,EAAOO,MAAOa,WAAW,EAAOF,QAAQ,GACzD,CAAEF,GAAI,GAAIG,MAAOnB,EAAOQ,MAAOY,WAAW,EAAOF,QAAQ,IAE3DG,gBAAiB,GACjBC,QAAS,GAGEE,EAAkBC,IAAMC,eAAc,eACtCC,EAAeF,IAAMC,cAAcH,GAEnCK,EAAgB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACjBC,qBACxBrB,EACAc,GAHyC,mBACpCb,EADoC,KAC7BqB,EAD6B,KAM3C,OACE,cAACP,EAAgBQ,SAAjB,CAA0BC,MAAOF,EAAjC,SACE,cAACJ,EAAaK,SAAd,CAAuBC,MAAOvB,EAA9B,SACGmB,OC3GIK,EAAQ,WACnB,IAAMH,EAAWI,qBAAWX,GADH,EAEUW,qBAAWR,GAAtCd,EAFiB,EAEjBA,MAAOQ,EAFU,EAEVA,gBAEfe,qBAAU,WAEN,IFJmBC,EEGU,IAA3BhB,EAAgBiB,UFHCD,EEIEhB,GFHd,GAAGF,QAAUkB,EAAI,GAAGlB,OEMzBoB,YAAW,WACTR,EAAS,CACPnB,KAAM,QACNK,QAASI,MAEV,KAEHU,EAAS,CAACnB,KAAM,cAEhB2B,YAAW,WACTR,EAAS,CACPnB,KAAM,UACNK,QAASI,MAEV,KAGLkB,YAAW,WACTR,EAAS,CAAEnB,KAAM,mBAChB,SAEJ,CAACS,EAAiBU,IAQrB,OACE,qBAAKS,UAAU,QAAf,SACG3B,EAAMC,KAAI,SAACC,GAAD,OACT,qBACEyB,UAAWC,IAAG,eAAgB,CAC5B,eAAgB1B,EAAKK,YAFzB,SAME,sBACEoB,UAAWC,IAAG,cAAe,CAC3B,aAAc1B,EAAKG,SAErBwB,QAAS,YAnBE,SAAC,GAAmB,IAAjB1B,EAAgB,EAAhBA,GAAIG,EAAY,EAAZA,MAC1BY,EAAS,CAAEnB,KAAM,SAAUK,QAASD,IAEpCe,EAAS,CAAEnB,KAAM,WAAYK,QAAS,CAAED,KAAIG,WAiBlCwB,CAAa5B,IALjB,UAQE,qBAAKyB,UAAU,mCACf,qBACEA,UAAU,gCACVI,MAAO,CAAEC,gBAAgB,GAAD,OAAK9B,EAAKI,cAbjCJ,EAAKC,UChDP8B,G,MAAM,WACjB,OACE,qCACE,oBAAIN,UAAU,eACZI,MAAO,CAAEzB,MAAM,GAAD,OAAKpB,IADrB,qBAMA,oBAAIyC,UAAU,eACZI,MAAO,CAAEzB,MAAM,GAAD,OAAKpB,IADrB,oECiBSgD,MAtBf,WAAgB,IACNzB,EAAYa,qBAAWR,GAAvBL,QAER,OACE,qBAAKkB,UAAU,MAAf,SACe,IAAZlB,EACC,cAAC,EAAD,IAEA,qCACE,oBACEkB,UAAU,eACVI,MAAO,CAAEzB,MAAM,GAAD,OAAKpB,IAFrB,qDAMA,cAAC,EAAD,UChBViD,IAASC,OACP,cAAC,EAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.3a8ea801.chunk.js","sourcesContent":["function getRandomRgb() {\n  var num = Math.round(0xffffff * Math.random());\n  var r = num >> 16;\n  var g = (num >> 8) & 255;\n  var b = num & 255;\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}\n\nexport const areEqual = (arr) => {\n  return arr[0].color === arr[1].color;\n};\n\nexport const headingColor = getRandomRgb();\n\nexport const colors = {\n  one: getRandomRgb(),\n  two: getRandomRgb(),\n  tree: getRandomRgb(),\n  four: getRandomRgb(),\n  five: getRandomRgb(),\n  six: getRandomRgb(),\n  seven: getRandomRgb(),\n  eight: getRandomRgb(),\n};\n","import React, { useReducer } from 'react';\nimport { colors } from './randomColors';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle':\n      return {\n        ...state,\n        tiles: state.tiles.map(tile => {\n          if (tile.id !== action.payload) {\n            return tile;\n          }\n\n          return {\n            ...tile,\n            toggle: !tile.toggle,\n          }\n        })\n      }\n\n    case 'equal':\n      return {\n        ...state,\n        tiles: state.tiles.map(tile => {\n          if (tile.color !== action.payload[0].color\n            && tile.color !== action.payload[1].color) {\n            return tile;\n          }\n\n          return {\n            ...tile,\n            completed: !tile.completed,\n          }\n        })\n      }\n\n    case 'noEqual':\n      return {\n        ...state,\n        tiles: state.tiles.map(tile => {\n          if (tile.id !== action.payload[0].id\n            && tile.id !== action.payload[1].id) {\n            return tile;\n          }\n\n          return {\n            ...tile,\n            toggle: !tile.toggle,\n          }\n        })\n      }\n\n    case \"addColor\":\n      return {\n        ...state,\n        twoChoosenTiles: [\n          ...state.twoChoosenTiles,\n          action.payload,\n        ],\n      };\n\n    case \"deleteColors\":\n      return {\n        ...state,\n        twoChoosenTiles: [],\n      };\n\n    case \"increase\":\n      return {\n        ...state,\n        counter: state.counter + 1,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initialState = {\n  tiles: [\n    { id: 1, color: colors.one, completed: false, toggle: false },\n    { id: 2, color: colors.two, completed: false, toggle: false },\n    { id: 3, color: colors.tree, completed: false, toggle: false },\n    { id: 4, color: colors.four, completed: false, toggle: false },\n    { id: 5, color: colors.five, completed: false, toggle: false },\n    { id: 6, color: colors.six, completed: false, toggle: false },\n    { id: 7, color: colors.seven, completed: false, toggle: false },\n    { id: 8, color: colors.eight, completed: false, toggle: false },\n    { id: 9, color: colors.one, completed: false, toggle: false },\n    { id: 10, color: colors.two, completed: false, toggle: false },\n    { id: 11, color: colors.tree, completed: false, toggle: false },\n    { id: 12, color: colors.four, completed: false, toggle: false },\n    { id: 13, color: colors.five, completed: false, toggle: false },\n    { id: 14, color: colors.six, completed: false, toggle: false },\n    { id: 15, color: colors.seven, completed: false, toggle: false },\n    { id: 16, color: colors.eight, completed: false, toggle: false },\n  ],\n  twoChoosenTiles: [],\n  counter: 0,\n};\n\nexport const DispatchContext = React.createContext(() => { });\nexport const StateContext = React.createContext(initialState);\n\nexport const StateProvider = ({children}) => {\n  const [state, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  )\n};\n","import './Field.scss';\nimport { useEffect, useContext } from 'react';\nimport CN from 'classnames';\nimport { StateContext, DispatchContext } from '../../store/StateContext';\nimport { areEqual } from '../../store/randomColors';\n\nexport const Field = () => {\n  const dispatch = useContext(DispatchContext);\n  const { tiles, twoChoosenTiles } = useContext(StateContext);\n\n  useEffect(() => {\n    if (twoChoosenTiles.length === 2) {\n      let equal = areEqual(twoChoosenTiles);\n\n      if (equal) {\n        setTimeout(() => {\n          dispatch({\n            type: 'equal',\n            payload: twoChoosenTiles\n          });\n        }, 1000);\n\n        dispatch({type: 'increase'});\n      } else {\n        setTimeout(() => {\n          dispatch({\n            type: 'noEqual',\n            payload: twoChoosenTiles\n          });\n        }, 900);\n      }\n\n      setTimeout(() => {\n        dispatch({ type: \"deleteColors\" });\n      }, 1001);\n    }\n  }, [twoChoosenTiles, dispatch]);\n\n  const clickHandler = ({ id, color }) => {\n    dispatch({ type: 'toggle', payload: id });\n\n    dispatch({ type: 'addColor', payload: { id, color } });\n  };\n\n  return (\n    <div className=\"field\">\n      {tiles.map((tile) => (\n        <div\n          className={CN(\"field__scene\", {\n            \"is-completed\": tile.completed,\n          })}\n          key={tile.id}\n        >\n          <div\n            className={CN(\"field__tile\", {\n              \"is-flipped\": tile.toggle,\n            })}\n            onClick={() => {\n              clickHandler(tile);\n            }}\n          >\n            <div className=\"field__face field__face--front\"></div>\n            <div\n              className=\"field__face field__face--back\"\n              style={{ backgroundColor: `${tile.color}` }}\n            ></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import './End.scss';\nimport { headingColor } from '../../store/randomColors';\n\nexport const End = () => {\n  return (\n    <>\n      <h2 className=\"End__heading\"\n        style={{ color: `${headingColor}` }}\n      >\n        The End\n      </h2>\n\n      <h2 className=\"End__heading\"\n        style={{ color: `${headingColor}` }}\n      >\n        Restart page to start the game from the beginning\n      </h2>\n    </>\n  );\n}\n","import './App.scss';\nimport { useContext } from 'react';\nimport { Field } from './components/Field/Field';\nimport { End } from './components/End/End';\nimport { StateContext } from './store/StateContext';\nimport { headingColor } from './store/randomColors';\n\nfunction App() {\n  const { counter } = useContext(StateContext);\n\n  return (\n    <div className=\"App\">\n      {counter === 8 ? (\n        <End />\n      ) : (\n        <>\n          <h2\n            className=\"App__heading\"\n            style={{ color: `${headingColor}` }}\n          >\n            Choose the same tiles do they disappear\n          </h2>\n          <Field />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './store/StateContext';\n\nReactDOM.render(\n  <StateProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </StateProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}