{"version":3,"sources":["components/Field/Field.jsx","App.jsx","index.js"],"names":["getRandomRgb","num","Math","round","random","colors","one","two","tree","four","five","six","seven","eight","console","log","initialState","id","color","completed","toggle","arrTiles","Field","useState","tiles","setTiles","twoChoosedTiles","setTwoChoosedTiles","areEqual","arr","className","map","tile","CN","onClick","push","length","a","setTimeout","clickHandler","pop","style","backgroundColor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b914aa13.chunk.js","sourcesContent":["import './Field.scss';\nimport { useEffect, useState, useReducer } from 'react';\nimport CN from 'classnames';\n\nfunction getRandomRgb() {\n  var num = Math.round(0xffffff * Math.random());\n  var r = num >> 16;\n  var g = (num >> 8) & 255;\n  var b = num & 255;\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}\n\nconst colors = {\n  one: getRandomRgb(),\n  two: getRandomRgb(),\n  tree: getRandomRgb(),\n  four: getRandomRgb(),\n  five: getRandomRgb(),\n  six: getRandomRgb(),\n  seven: getRandomRgb(),\n  eight: getRandomRgb(),\n};\n\nconsole.log(colors);\n\nconst initialState = [\n  { id: 1, color: colors.one, completed: false, toggle: false },\n  { id: 2, color: colors.two, completed: false, toggle: false },\n  { id: 3, color: colors.tree, completed: false, toggle: false },\n  { id: 4, color: colors.four, completed: false, toggle: false },\n  { id: 5, color: colors.five, completed: false, toggle: false },\n  { id: 6, color: colors.six, completed: false, toggle: false },\n  { id: 7, color: colors.seven, completed: false, toggle: false },\n  { id: 8, color: colors.eight, completed: false, toggle: false },\n  { id: 9, color: colors.one, completed: false, toggle: false },\n  { id: 10, color: colors.two, completed: false, toggle: false },\n  { id: 11, color: colors.tree, completed: false, toggle: false },\n  { id: 12, color: colors.four, completed: false, toggle: false },\n  { id: 13, color: colors.five, completed: false, toggle: false },\n  { id: 14, color: colors.six, completed: false, toggle: false },\n  { id: 15, color: colors.seven, completed: false, toggle: false },\n  { id: 16, color: colors.eight, completed: false, toggle: false },\n];\n\nconsole.log(initialState);\n\nlet arrTiles = [];\n\nexport const Field = () => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [tiles, setTiles] = useState(initialState);\n  const [twoChoosedTiles, setTwoChoosedTiles] = useState('');\n\n  console.log(twoChoosedTiles);\n\n  const clickHandler = ({ id, color, completed }) => {\n\n    if (!twoChoosedTiles) {\n      setTwoChoosedTiles(color);\n      arrTiles.push(color);\n    }\n\n    if (twoChoosedTiles) {\n      arrTiles.push(color);\n    }\n\n    if (arrTiles.length === 2) {\n      let a = areEqual(arrTiles);\n\n      if (a === true) {\n        setTimeout(() => {\n          setTiles(\n            tiles.map((tile) => {\n              if (tile.color === arrTiles[0] && tile.color === arrTiles[1]) {\n                tile.completed = !tile.completed;\n              }\n  \n              return tile;\n            }),\n          );\n        }, 1500);\n      }\n      console.log(a);\n    }\n\n\n    // arrTiles.splice(0, 2);\n\n    // else if (twoChoosedTiles === color) {\n    //   setTiles(\n    //     tiles.map((tile) => {\n    //       if (tile.id === id) {\n    //         tile.completed = !tile.completed;\n    //       }\n\n    //       return tile;\n    //     }),\n    //   );\n    // }\n\n    // if (twoChoosedTiles !== color) {\n    //   setTiles(\n    //     tiles.map((tile) => {\n    //       if (tile.id === id) {\n    //         tile.toggle = !tile.toggle;\n    //       }\n\n    //       return tile;\n    //     }),\n    //   );\n    // }\n\n    setTiles(\n      tiles.map(tile => {\n        if (tile.id === id) {\n          tile.toggle = !tile.toggle;\n        }\n\n        return tile;\n      })\n    );\n\n    // setTiles(\n    //   tiles.map((tile) => {\n    //     if (tile.id === id) {\n    //       tile.completed = !tile.completed;\n    //     }\n\n    //     return tile;\n    //   }),\n    // );\n\n    // setIsFlipped(!isFlipped);\n\n    console.log(id);\n    console.log(color);\n    console.log(completed);\n  };\n\n  const areEqual = (arr) => {\n    if (arr[0] === arr[1]) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"field\">\n      {tiles.map((tile) => (\n        <div\n          className={CN(\"field__scene\", {\n            \"is-completed\": tile.completed,\n          })}\n          // className=\"field__scene\"\n          key={tile.id}\n        >\n          <div\n            className={CN(\"field__tile\", {\n              \"is-flipped\": tile.toggle,\n            })}\n            // className=\"field__tile\"\n            onClick={() => {\n              clickHandler(tile);\n              arrTiles.push(tile.color);\n              arrTiles.pop();\n            }}\n          >\n            <div className=\"field__face field__face--front\"></div>\n            <div\n              className=\"field__face field__face--back\"\n              style={{ backgroundColor: `${tile.color}` }}\n            ></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import './App.scss';\nimport { Field } from './components/Field/Field';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Field />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}