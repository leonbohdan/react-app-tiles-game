{"version":3,"sources":["store/state.js","store/StateContext.jsx","components/Field/Field.jsx","components/End/End.jsx","App.jsx","index.js"],"names":["getRandomRgb","num","Math","round","random","colors","one","two","tree","four","five","six","seven","eight","initialState","tiles","id","color","completed","toggle","twoChoosenTiles","count","reducer","state","action","type","isFirstTile","payload","map","tile","DispatchContext","React","createContext","StateContext","StateProvider","children","useReducer","dispatch","Provider","value","Field","useContext","useState","setTiles","console","log","areEqual","arr","className","CN","onClick","length","push","setTimeout","splice","clickHandler","style","backgroundColor","End","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129cecff.chunk.js","sourcesContent":["function getRandomRgb() {\n  var num = Math.round(0xffffff * Math.random());\n  var r = num >> 16;\n  var g = (num >> 8) & 255;\n  var b = num & 255;\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}\n\nconst colors = {\n  one: getRandomRgb(),\n  two: getRandomRgb(),\n  tree: getRandomRgb(),\n  four: getRandomRgb(),\n  five: getRandomRgb(),\n  six: getRandomRgb(),\n  seven: getRandomRgb(),\n  eight: getRandomRgb(),\n};\n\nexport const initialState = {\n  tiles: [\n    { id: 1, color: colors.one, completed: false, toggle: false },\n    { id: 2, color: colors.two, completed: false, toggle: false },\n    { id: 3, color: colors.tree, completed: false, toggle: false },\n    { id: 4, color: colors.four, completed: false, toggle: false },\n    { id: 5, color: colors.five, completed: false, toggle: false },\n    { id: 6, color: colors.six, completed: false, toggle: false },\n    { id: 7, color: colors.seven, completed: false, toggle: false },\n    { id: 8, color: colors.eight, completed: false, toggle: false },\n    { id: 9, color: colors.one, completed: false, toggle: false },\n    { id: 10, color: colors.two, completed: false, toggle: false },\n    { id: 11, color: colors.tree, completed: false, toggle: false },\n    { id: 12, color: colors.four, completed: false, toggle: false },\n    { id: 13, color: colors.five, completed: false, toggle: false },\n    { id: 14, color: colors.six, completed: false, toggle: false },\n    { id: 15, color: colors.seven, completed: false, toggle: false },\n    { id: 16, color: colors.eight, completed: false, toggle: false },\n  ],\n  twoChoosenTiles: [],\n  count: 0,\n};\n","import React, { useReducer } from 'react';\n\nfunction getRandomRgb() {\n  var num = Math.round(0xffffff * Math.random());\n  var r = num >> 16;\n  var g = (num >> 8) & 255;\n  var b = num & 255;\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n}\n\nconst colors = {\n  one: getRandomRgb(),\n  two: getRandomRgb(),\n  tree: getRandomRgb(),\n  four: getRandomRgb(),\n  five: getRandomRgb(),\n  six: getRandomRgb(),\n  seven: getRandomRgb(),\n  eight: getRandomRgb(),\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"color\":\n      return {\n        ...state,\n        isFirstTile: action.payload,\n      };\n\n    case \"increase\":\n      return {\n        ...state,\n        count: state.count + 1,\n      };\n\n    case \"toggle\":\n      return {\n        ...state,\n        tiles: state.tiles.map((tile) => {\n          if (tile.id === action.payload) {\n            tile.toggle = !tile.toggle;\n          }\n\n          return tile;\n        }),\n      };\n\n    // case 'toggle':\n    //   return {\n    //     ...state,\n    //     tiles: [\n    //       ...state.tiles,\n    //       state.tiles.map(tile => {\n    //         if (tile.id === action.payload) {\n\n    //         }\n    //       })\n    //     ]\n    //   }\n\n    default:\n      return 1;\n  }\n};\n\nexport const initialState = {\n  tiles: [\n    { id: 1, color: colors.one, completed: false, toggle: false },\n    { id: 2, color: colors.two, completed: false, toggle: false },\n    { id: 3, color: colors.tree, completed: false, toggle: false },\n    { id: 4, color: colors.four, completed: false, toggle: false },\n    { id: 5, color: colors.five, completed: false, toggle: false },\n    { id: 6, color: colors.six, completed: false, toggle: false },\n    { id: 7, color: colors.seven, completed: false, toggle: false },\n    { id: 8, color: colors.eight, completed: false, toggle: false },\n    { id: 9, color: colors.one, completed: false, toggle: false },\n    { id: 10, color: colors.two, completed: false, toggle: false },\n    { id: 11, color: colors.tree, completed: false, toggle: false },\n    { id: 12, color: colors.four, completed: false, toggle: false },\n    { id: 13, color: colors.five, completed: false, toggle: false },\n    { id: 14, color: colors.six, completed: false, toggle: false },\n    { id: 15, color: colors.seven, completed: false, toggle: false },\n    { id: 16, color: colors.eight, completed: false, toggle: false },\n  ],\n  twoChoosenTiles: [],\n  count: 0,\n};\n\nexport const DispatchContext = React.createContext(() => { });\nexport const StateContext = React.createContext(initialState);\n\nexport const StateProvider = ({children}) => {\n  const [state, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  )\n};\n","import './Field.scss';\nimport { useEffect, useState, useReducer, useContext } from 'react';\nimport CN from 'classnames';\nimport { initialState } from '../../store/state';\nimport { StateContext, DispatchContext } from '../../store/StateContext';\n\n// console.log(initialState);\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case 'color':\n//       return {\n//         ...state,\n//         isFirstTile: action.payload,\n//       }\n    \n//     case 'increase':\n//       return {\n//         ...state,\n//         count: state.count + 1,\n//       }\n    \n//     case 'toggle':\n//       return {\n//         ...state,\n//         tiles: state.tiles.map(tile => {\n//           if (tile.id === action.payload) {\n//             tile.toggle = !tile.toggle;\n//           }\n\n//           return tile;\n//         }),\n//       }\n    \n    // case 'toggle':\n    //   return {\n    //     ...state,\n    //     tiles: [\n    //       ...state.tiles,\n    //       state.tiles.map(tile => {\n    //         if (tile.id === action.payload) {\n              \n    //         }\n    //       })\n    //     ]\n    //   }\n\n//     default:\n//       return 1;\n//   }\n// }\n\nexport const Field = () => {\n  const dispatch = useContext(DispatchContext);\n  const { count } = useContext(StateContext);\n\n  const [tiles, setTiles] = useState(initialState.tiles);\n  // const [count, setCount] = useState(initialState.count);\n  // const [{ count }, dispatch] = useReducer(\n  //   reducer,\n  //   initialState\n  // );\n  // const [{ tiles, twoChoosenTiles, isFirstTile }, dispatch] = useReducer(\n  //   reducer,\n  //   initialState\n  // );\n\n  // console.log(tiles, twoChoosenTiles, isFirstTile);\n\n  console.log(count);\n\n  const clickHandler = ({ id, color }) => {\n    setTiles(\n      tiles.map((tile) => {\n        if (tile.id === id) {\n          tile.toggle = !tile.toggle;\n        }\n\n        return tile;\n      }),\n    );\n\n    // initialState.twoChoosenTiles.push({ id, color });\n\n    // dispatch({ type: 'toggle', payload: id });\n\n    if (initialState.twoChoosenTiles.length < 3) {\n      // dispatch({ type: 'color', payload: color });\n      initialState.twoChoosenTiles.push({ id, color });\n    } else {\n      return;\n      // initialState.twoChoosenTiles.push({ id, color });\n    }\n\n    if (initialState.twoChoosenTiles.length === 2) {\n      let equal = areEqual(initialState.twoChoosenTiles);\n\n      if (equal) {\n        setTimeout(() => {\n          setTiles(\n            tiles.map((tile) => {\n              if (\n                tile.color === initialState.twoChoosenTiles[0].color &&\n                tile.color === initialState.twoChoosenTiles[1].color\n              ) {\n                tile.completed = !tile.completed;\n              }\n\n              return tile;\n            }),\n          );\n        }, 1000);\n\n        dispatch({type: 'increase'});\n      } else {\n        setTimeout(() => {\n          setTiles(\n            tiles.map((tile) => {\n              if (\n                tile.id === initialState.twoChoosenTiles[0].id ||\n                tile.id === initialState.twoChoosenTiles[1].id\n              ) {\n                tile.toggle = false;\n              }\n\n              return tile;\n            }),\n          );\n        }, 900);\n      }\n\n      setTimeout(() => {\n        initialState.twoChoosenTiles.splice(0, 2);\n      }, 1001);\n    }\n  };\n\n  const areEqual = (arr) => {\n    if (arr[0].color === arr[1].color) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"field\">\n      {tiles.map((tile) => (\n        <div\n          className={CN(\"field__scene\", {\n            \"is-completed\": tile.completed,\n          })}\n          key={tile.id}\n        >\n          <div\n            className={CN(\"field__tile\", {\n              \"is-flipped\": tile.toggle,\n            })}\n            onClick={() => {\n              clickHandler(tile);\n            }}\n          >\n            <div className=\"field__face field__face--front\"></div>\n            <div\n              className=\"field__face field__face--back\"\n              style={{ backgroundColor: `${tile.color}` }}\n            ></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import './End.scss';\n\nexport const End = () => {\n  return (\n    <>\n      <h2>The End</h2>\n      <h2>Restart page to start the game from the beginning</h2>\n    </>\n  );\n}\n","import './App.scss';\nimport { useEffect, useContext } from 'react';\nimport { Field } from './components/Field/Field';\nimport { End } from './components/End/End';\nimport { StateContext } from './store/StateContext';\n\nfunction App() {\n  const { count } = useContext(StateContext);\n\n  console.log(count);\n  return (\n    <div className=\"App\">\n      {count === 8 ? (\n        <End />\n      ) : (\n        <>\n          <h2 className=\"App__heading\">Choose the same tiles</h2>\n          <Field />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './store/StateContext';\n\nReactDOM.render(\n  <StateProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </StateProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}